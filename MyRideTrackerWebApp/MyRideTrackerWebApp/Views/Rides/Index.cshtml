@model ReflectionIT.Mvc.Paging.PagingList<MyRideTrackerWebApp.Models.Ride>
@using ReflectionIT.Mvc.Paging
@addTagHelper *,ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Rides List";
}

<h1>Rides List</h1>
<div class="row">
    <div class="col-md-3">
        Total Rides = @ViewBag.Count
    </div>
    <div class="col-md-3">
        Total Miles = @ViewBag.TotalMiles
    </div>
    <div class="col-md-3">
        Current Odometer: @ViewBag.CurrentOdometer
    </div>
</div>
<br />
<p>
    <a class="btn btn-primary" asp-controller="Rides" asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                Date
            </th>
            <th>
                Start <br /> Mileage
            </th>
            <th>
                End <br /> Mileage
            </th>
            <th>
                Total <br /> Miles
            </th>
            <th>
                Fill Up
            </th>
            <th>
                Gallons
            </th>
            <th>
                Price <br />(per gallon)
            </th>
            <th>
                Miles <br />(per gallon)
            </th>
            <th>
                Route
            </th>
            <th>
                Description
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @item.RideDate.ToString("MM/dd/yyyy")<br />
                @item.RideDate.ToString("hh:mm tt")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MileageStart)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MileageEnd)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalMiles)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FillUp)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gallons)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PricePerGallon)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MilesPerGallon)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RideRoute)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RideDescription)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.RideId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.RideId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.RideId">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
<nav aria-label="Ride Paging">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>

@*@{ 
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-dark @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-dark @nextDisabled">
    Next
</a>*@

<br />

@*<table class="table">
    <tr>
        <th>RideDate</th>
        <th>Gallons</th>
        <th>PricePerGallon</th>
        <th>End Mileage</th>
    </tr>
    @foreach (var item in (List<Ride>)ViewBag.FillUpList)
    {
        <tr>
            <td>@item.RideDate</td>
            <td>@item.Gallons</td>
            <td>@item.PricePerGallon</td>
            <td>@item.MileageEnd</td>
        </tr>
    }
</table>*@

